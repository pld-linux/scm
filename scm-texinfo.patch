--- scm/Xlibscm.texi.orig	2014-04-20 09:17:36.657789313 +0200
+++ scm/Xlibscm.texi	2014-04-20 09:44:30.514422341 +0200
@@ -257,8 +257,9 @@
 Returns the root window for the specified @var{screen-number}.  Use
 @code{x:root-window} for functions that need a drawable of a particular
 screen or for creating top-level windows.
+@end defun
 
-@defunx x:root-window window
+@defun x:root-window window
 Returns the root window for the specified @var{window}'s screen.
 @end defun
 
@@ -345,7 +346,8 @@
 
 @defun x:screen-depth display screen-number
 Returns the depth of the root window of the specified screen.
-@defunx x:screen-depth display
+@end defun
+@defun x:screen-depth display
 @defunx x:screen-depth window
 @defunx x:screen-depth visual
 Returns the depth of argument.
@@ -420,8 +422,9 @@
 
 The returned window will have the attributes specified by
 @var{field-name}s and @var{value}.
+@end defun
 
-@defunx x:create-window window position size border-width border background
+@defun x:create-window window position size border-width border background
 The returned window inherits its depth, class, and visual from its
 parent.  All other window attributes, except @var{background} and
 @var{border}, have their default values.
@@ -909,7 +912,8 @@
 @defun x:get-window-property window property 
 Returns the (string or list of numbers) value of @var{property} of
 @var{window}.
-@defunx x:get-window-property window property #t
+@end defun
+@defun x:get-window-property window property #t
 Removes and returns the (string or list of numbers) value of
 @var{property} of @var{window}.
 @end defun
@@ -1392,8 +1396,9 @@
 initial colors of a cursor are a black foreground and a white background
 (see X:Recolor-Cursor).  The names of all cursor shapes are defined with
 the prefix XC: in @file{x11.scm}.
+@end defun
 
-@defunx x:create-cursor source-font source-char mask-font mask-char fgc bgc
+@defun x:create-cursor source-font source-char mask-font mask-char fgc bgc
 Creates a cursor from the source and mask bitmaps obtained from the
 specified font glyphs.  The integer @var{source-char} must be a defined
 glyph in @var{source-font}.  The integer @var{mask-char} must be a
@@ -1402,12 +1407,14 @@
 hotspot.  The @var{source-char} and @var{mask-char} need not have the
 same bounding box metrics, and there is no restriction on the placement
 of the hotspot relative to the bounding boxes.
+@end defun
 
-@defunx x:create-cursor source-font source-char #f #f fgc bgc
+@defun x:create-cursor source-font source-char #f #f fgc bgc
 If @var{mask-font} and @var{mask-char} are #f, all pixels of the source
 are displayed.
+@end defun
 
-@defunx x:create-cursor source-pixmap mask-pixmap fgc bgc origin
+@defun x:create-cursor source-pixmap mask-pixmap fgc bgc origin
 @var{mask-pixmap} must be the same size as the pixmap defined by the
 @var{source-pixmap} argument.  The foreground and background RGB values
 must be specified using @var{foreground-color} and
@@ -1422,8 +1429,9 @@
 @var{mask-pixmap} defines the shape of the cursor.  The pixels set to 1
 in @var{mask-pixmap} define which source pixels are displayed, and the
 pixels set to 0 define which pixels are ignored.
+@end defun
 
-@defunx x:create-cursor source-pixmap #f fgc bgc origin
+@defun x:create-cursor source-pixmap #f fgc bgc origin
 If @var{mask-pixmap} is #f, all pixels of the source are displayed.
 @end defun
 
@@ -1538,9 +1546,9 @@
 @code{X:Alloc-Color-Cells} returns a list of two uniform arrays if it
 succeeded or #f if it failed.  The first array has the pixels allocated
 and the second has the plane-masks.
+@end defun
 
-
-@defunx x:alloc-colormap-cells colormap ncolors rgb
+@defun x:alloc-colormap-cells colormap ncolors rgb
 @defunx x:alloc-colormap-cells colormap ncolors rgb contiguous?
 
 The specified @var{ncolors} must be positive; and @var{rgb} a list or
@@ -1596,8 +1604,9 @@
 @var{rgb} is a list or vector of 3 integers, describing the red, green,
 and blue intensities respectively; or an integer @samp{#x@i{rrggbb}},
 packing red, green and blue intensities in the range 0 - 255.
+@end defun
 
-@defunx x:colormap-find-color colormap color-name
+@defun x:colormap-find-color colormap color-name
 
 The case-insensitive string @var{color_name} specifies the name of a
 color (for example, @file{red})
@@ -1630,8 +1639,9 @@
 @var{rgb} is a list or vector of 3 integers, describing the red, green,
 and blue intensities respectively; or an integer @samp{#x@i{rrggbb}},
 packing red, green and blue intensities in the range 0 - 255.
+@end defun
 
-@defunx X:Color-Set! colormap pixel color-name
+@defun X:Color-Set! colormap pixel color-name
 
 The case-insensitive string @var{color_name} specifies the name of a
 color (for example, @file{red})
@@ -1671,8 +1681,9 @@
 function because the output buffer is automatically flushed as needed by
 calls to X:Pending, X:Next-Event, and X:Window-Event.  Events generated
 by the server may be enqueued into the library's event queue.
+@end defun
 
-@defunx x:flush gc
+@defun x:flush gc
 Forces sending of GC component changes.
 
 Xlib usually defers sending changes to the components of a GC to the
@@ -1726,12 +1737,14 @@
 
 @defun x:draw-points drawable gc position @dots{}
 @var{Position} @dots{} specifies coordinates of the point to be drawn.
+@end defun
 
-@defunx x:draw-points drawable gc x y @dots{}
+@defun x:draw-points drawable gc x y @dots{}
 (@var{x}, @var{y}) @dots{} specifies coordinates of the point to be
 drawn.
+@end defun
 
-@defunx x:draw-points drawable gc point-array
+@defun x:draw-points drawable gc point-array
 @var{point-array} is a uniform short array of rank 2, whose rightmost
 index spans a range of 2.
 
@@ -1748,12 +1761,14 @@
 @defun x:draw-segments drawable gc pos1 pos2 @dots{}
 @var{Pos1}, @var{pos2}, @dots{} specify coordinates to be connected by
 segments.
+@end defun
 
-@defunx x:draw-segments drawable gc x1 y1 x2 y2 @dots{}
+@defun x:draw-segments drawable gc x1 y1 x2 y2 @dots{}
 (@var{x1}, @var{y1}), (@var{x2}, @var{y2}) @dots{} specify coordinates
 to be connected by segments.
+@end defun
 
-@defunx x:draw-segments drawable gc point-array
+@defun x:draw-segments drawable gc point-array
 @var{point-array} is a uniform short array of rank 2, whose rightmost
 index spans a range of 2.
 
@@ -1779,12 +1794,14 @@
 @defun x:draw-lines drawable gc pos1 pos2 @dots{}
 @var{Pos1}, @var{pos2}, @dots{} specify coordinates to be connected by
 lines.
+@end defun
 
-@defunx x:draw-lines drawable gc x1 y1 x2 y2 @dots{}
+@defun x:draw-lines drawable gc x1 y1 x2 y2 @dots{}
 (@var{x1}, @var{y1}), (@var{x2}, @var{y2}) @dots{} specify coordinates
 to be connected by lines.
+@end defun
 
-@defunx x:draw-lines drawable gc point-array
+@defun x:draw-lines drawable gc point-array
 @var{point-array} is a uniform short array of rank 2, whose rightmost
 index spans a range of 2.
 
@@ -1810,12 +1827,14 @@
 
 @defun x:fill-polygon drawable gc pos1 pos2 @dots{}
 @var{Pos1}, @var{pos2}, @dots{} specify coordinates of the border path.
+@end defun
 
-@defunx x:fill-polygon drawable gc x1 y1 x2 y2 @dots{}
+@defun x:fill-polygon drawable gc x1 y1 x2 y2 @dots{}
 (@var{x1}, @var{y1}), (@var{x2}, @var{y2}) @dots{} specify coordinates
 of the border path.
+@end defun
 
-@defunx x:fill-polygon drawable gc point-array
+@defun x:fill-polygon drawable gc point-array
 @var{point-array} is a uniform short array of rank 2, whose rightmost
 index spans a range of 2.
 
